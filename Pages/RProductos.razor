@page "/rproductos"
@page "/rproductos/{ProductoId:int}"

@inject IToastService toastService

<EditForm Model="producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div className="container">

        <div class="card">

            <div class="card-header">
                <h3>Registro de Productos</h3>
            </div>

            <div class="card-body ">

                <div class="form-row align-items-center">
                    <div class="col">

                        <div class="form-group">

                            <label>Producto Id</label>

                            <div class="input-group row">

                                <InputNumber @bind-Value="producto.ProductoId" class="form-control col-4 col" />

                                <div class="input-group-append col">
                                    <button type="button" class="btn btn-success input-group-text"
                                        @onclick="Buscar">Buscar</button>
                                </div>

                            </div>

                        </div>

                    </div>
                </div>

                <hr>

                <div class="row">

                    @* Descripción *@
                    <div class="form-group col">
                        <label>Descripción</label>
                        <div class="input-group">
                            <InputText class="form-control" @bind-Value="producto.Descripcion"
                                placeholder="Descripcion del Producto" />
                            <ValidationMessage For="@(() => producto.Descripcion)" />
                        </div>
                    </div>

                </div>

                <div class="row">

                    @* Costo *@
                    <div class="form-group col">
                        <label>Costo</label>
                        <InputNumber class="form-control" @bind-Value="producto.Costo" />
                        <ValidationMessage For="@(() => producto.Costo)" />
                    </div>

                    @* Existencia *@
                    <div class="form-group col">
                        <label>Existencia</label>
                        <InputNumber class="form-control" @bind-Value="producto.Existencia" />
                        <ValidationMessage For="@(() => producto.Existencia)" />
                    </div>

                    @* Precio *@
                    <div class="form-group col">
                        <label>Precio</label>
                        <InputNumber class="form-control" @bind-Value="producto.Precio" />
                        <ValidationMessage For="@(() => producto.Precio)" />
                    </div>

                    @* Ganacia *@
                    <div class="form-group col">
                        <label>Ganacia</label>
                        <InputNumber readonly class="form-control" @bind-Value="producto.Ganancia" />
                        <ValidationMessage For="@(() => producto.Ganancia)" />
                    </div>

                </div>

                <hr>

                @* PRODUCTO DETALLE *@

                <div class="card-header">
                    <h3>Detalle</h3>
                </div>

                <form>
                    <div class="row input-group d-flex align-items-end">

                        @* Presentacion *@
                        <div class="form-group col">
                            <label>Presentacion</label>
                            <InputText class="form-control" @bind-Value="Presentacion" />
                            <ValidationMessage For="@(() => Presentacion)" />
                        </div>

                        @* Cantidad *@
                        <div class="form-group col">
                            <label>Cantidad</label>
                            <InputNumber class="form-control" @bind-Value="Cantidad" />
                            <ValidationMessage For="@(() => Cantidad)" />
                        </div>

                        @* Precio *@
                        <div class="form-group col">
                            <label>Precio</label>
                            <InputNumber class="form-control" @bind-Value="Precio" />
                            <ValidationMessage For="@(() => Precio)" />
                        </div>


                        <button type="button" class="btn btn-success col" @onclick="AgregarDetalle">
                            ➕ Agregar Detalle
                        </button>

                    </div>
                    <br>
                    <table class="table table-secondary">
                        <thead class="thead-dark">
                            <tr class="table-info">
                                <th>Id</th>
                                <th>Presentacion</th>
                                <th>Cantidad</th>
                                <th>Precio</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in producto.Detalle)
                            {
                                <tr>
                                    <td>@item.ProductoId</td>
                                    <td>@item.Presentacion</td>
                                    <td>@item.Cantidad</td>
                                    <td>RD$ @item.Precio</td>

                                    <td><span class="btn btn-sm btn-outline-primary oi oi-ban" href="#"  @onclick=" (() => RemoverFila(item)) "> Remover</span></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </form>

            </div>


        </div>

        <div class="card-footer">

            @* Botones *@
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>

        </div>

    </div>
</EditForm>


@code {

    [Parameter]
    public int ProductoId { get; set; }
    public Productos producto { get; set; } = new Productos();

    [Inject]
    public ProductosBLL productosBLL { get; set; }

    public string Presentacion { get; set; }
    public int Cantidad { get; set; }
    public double Precio { get; set; }

    protected override void OnInitialized()
    {
        producto.ProductoId = ProductoId;
        Buscar();
    }

    public void Buscar()
    {
        if (this.producto.ProductoId > 0)
        {
            Productos encontrado = productosBLL.Buscar(this.producto.ProductoId);
            if (encontrado != null)
            {
                this.producto = encontrado;
                toastService.ShowSuccess("Producto encontrado.");
            }
            else
            {
                toastService.ShowError("No se encontró el producto");
            }
        }
    }

    private void AgregarDetalle()
    {
        this.producto.Detalle.Add(new ProductosDetalle(Presentacion, Cantidad, Precio));
        Presentacion = "";
        Cantidad = 0;
        Precio = 0; 
    }

    private void RemoverFila(ProductosDetalle item)
    {
        this.producto.Detalle.Remove(item);
    }

    private void Nuevo()
    {
        producto = new Productos();
    }

    public void Guardar()
    {
        CalculoValorInventario();
        CalcularGanancia();

        if (productosBLL.Guardar(producto))
        {
            toastService.ShowInfo("Se guardó exitosamente");
        }
        else
            toastService.ShowError("No se pudo guardar.");

    }

    public void Eliminar()
    {
        bool eliminado;

        eliminado = productosBLL.Eliminar(producto.ProductoId);

        if (eliminado)
        {
            Nuevo();
            toastService.ShowSuccess("Eliminación exitosa");
        }
        else
        {
            toastService.ShowError("Eliminación fallida");
        }
    }

    private void CalculoValorInventario()
    {
        double costo = producto.Costo;
        double existencia = producto.Existencia;

        producto.ValorInventario = costo * existencia;
    }

    private void CalcularGanancia()
    {
        producto.Ganancia = (((producto.Precio - producto.Costo) * 100) / producto.Costo);
    }

}
